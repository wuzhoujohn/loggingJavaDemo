# 1ST parameter is the logging level to use for this logger, all means all 6 levels of logging(from trace to fatal)
# 2ND parameter is the name of the appender where this logger should direct its output

# this is for setting up the logger, specify how many levels does the logger cover. here it logs all levels issues
log4j.logger.programmerLog = ALL, programmerLogFile
#this specify this is a file appender
log4j.appender.programmerLogFile = org.apache.log4j.RollingFileAppender
#this defines the location of the file
log4j.appender.programmerLogFile.File = ./logs/programmerDebugging.log
#false means creating new file instead of append the content to the end
log4j.appender.programmerLogFile.Append = false
log4j.appender.programmerLogFile.layout = org.apache.log4j.SimpleLayout

# If you absolutely must send output to the console, use this. 
# That way you can at least disable console logging when production code is deployed
# switch appender from file to console
log4j.logger.consoleLog = ALL, consoleOutput
log4j.appender.consoleOutput = org.apache.log4j.ConsoleAppender
log4j.appender.consoleOutput.layout = org.apache.log4j.PatternLayout
log4j.appender.consoleOutput.layout.ConversionPattern = %-22d{dd/MMM/yyyy HH:mm:ss} - %m%n

# Note: this logger directs its output to more than one appender
#since programmerLogFile is already configured, we can just 
log4j.logger.managerLog = ALL, managerLogFile, programmerLogFile
log4j.appender.managerLogFile = org.apache.log4j.RollingFileAppender
log4j.appender.managerLogFile.File = ./logs/managerLog.html
log4j.appender.managerLogFile.Append = false
log4j.appender.managerLogFile.layout = org.apache.log4j.HTMLLayout
log4j.appender.managerLogFile.layout.LocationInfo = true